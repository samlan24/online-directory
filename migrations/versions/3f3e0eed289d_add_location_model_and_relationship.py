"""Add location model and relationship

Revision ID: 3f3e0eed289d
Revises: cde474f0cc5d
Create Date: 2024-08-24 14:24:43.105232

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = '3f3e0eed289d'
down_revision = 'cde474f0cc5d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('locations',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('name')
    # )
    # Get the connection and inspector
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)

    # Check if the column exists
    columns = [col['name'] for col in inspector.get_columns('agents')]
    if 'location_id' not in columns:
        with op.batch_alter_table('agents', schema=None) as batch_op:
            batch_op.add_column(sa.Column('location_id', sa.Integer(), nullable=False))
            batch_op.create_foreign_key(None, 'locations', ['location_id'], ['id'])

    if 'password_hash' not in columns:
        with op.batch_alter_table('agents', schema=None) as batch_op:
            batch_op.add_column(sa.Column('password_hash', sa.String(255), nullable=True))
    else:
         with op.batch_alter_table('agents', schema=None) as batch_op:
            batch_op.alter_column('password_hash', type_=sa.String(255))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('agents', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('location_id')
        batch_op.alter_column('password_hash', type_=sa.String(128))

    op.drop_table('locations')
    # ### end Alembic commands ###
